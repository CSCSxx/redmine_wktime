<% 
    require 'json' 
    taxComp =  @taxSettingVal['tax_settings'].blank? ? {} : JSON.parse(@taxSettingVal['tax_settings'])
%>
<% if(action_type == "taxSettings") %>
    <h2><%= l(:label_income_tax_settings) %> (<%= l("#{@taxSettingVal['tax_rule']}") %>)</h2>
    <% content_for :sidebar do %>
	    <%= render partial: 'sidebar' %>
    <% end %>
    <% if request.post?
        taxSettings = WkSetting.where("name = 'tax_settings'" ).first
        taxSettings = WkSetting.new if taxSettings.blank?
        taxSettings.name = 'tax_settings'
        taxSettings.value = params[:taxsettings].to_json
        taxSettings.save()
        flash[:notice] = l(:notice_successful_update)
        controller.redirect_to controller: controller_name, action: 'income_tax', tab: "payroll", action_type: 'taxSettings'
       end %>
    <%= form_tag({controller: controller_name, action: 'income_tax', action_type: 'taxSettings'}, method: :post) do %>
        <fieldset>
            <table>
                <tr>
                    <td><%= "Annual Gross" %></td>
                    <td><%= select_tag 'taxsettings[gross]', options_for_select(getSalaryCompNames.invert, taxComp["gross"]) %></td>
                </tr>
                <tr>
                    <td><%= "PF" %></td>
                    <td><%= select_tag 'taxsettings[pf]', options_for_select(getSalaryCompNames.invert, taxComp["pf"]) %></td>
                </tr>
                <tr>
                    <td><%= "Professional Tax" %></td>
                    <td><%= select_tag 'taxsettings[prof_tax]', options_for_select(getSalaryCompNames.invert, taxComp["prof_tax"]) %></td>
                </tr>
                <tr>
                    <td><%= "Basic Salary" %></td>
                    <td><%= select_tag 'taxsettings[basic]', options_for_select(getSalaryCompNames.invert, taxComp["basic"]) %></td>
                </tr>
                <tr>
                    <td><%= "HRA" %></td>
                    <td><%= select_tag 'taxsettings[hra]', options_for_select(getSalaryCompNames.invert, taxComp["hra"]) %></td>
                </tr>
                <tr>
                    <td><%= "Children’s Education Allowance" %></td>
                    <td><%= select_tag 'taxsettings[edu_allowance]', options_for_select(getSalaryCompNames.invert, taxComp["edu_allowance"]) %></td>
                </tr>
                <tr>
                    <td><%= "Standard Deduction" %></td>
                    <td><%= text_field_tag("taxsettings[std_deduction]", taxComp["std_deduction"], size: 20) %></td>
                </tr>
            </table>
        </fieldset>
        <div><%= submit_tag l(:button_save) %></div>
    <% end %>
<% elsif(action_type == "userSettings") %>
	<%=h hidden_field_tag('std_deduction', taxComp["std_deduction"].to_i) %>
    <% disabled = !validateERPPermission('A_TE_PRVLG') %>
    <%  
        if(params[:method] == "saveTaxVal")
            incomeTax = WkIncomeTax.where("user_id = ? and name = 'income_tax'", userId).first
            incomeTax = WkIncomeTax.new if incomeTax.blank?
            incomeTax.user_id = userId
            incomeTax.name = 'income_tax'
            incomeTax.value = params[:taxsettings].permit!.to_json
            incomeTax.save()
            flash[:notice] = l(:notice_successful_update)
            controller.redirect_to :action => 'usrsettingsindex'
        end

        sectionAmt = 0
        deductionAmt = 0
        profTaxAmt =0
        hraVal = []
        taxValue = {}
        financialStartMonth = getFinancialStart
        start_year = Date.today.month < 4 ? (Date.today.year)-1 : Date.today.year
        startDate = ('01-' + financialStartMonth + '-' + start_year.to_s).to_date
        endDate = (startDate + 1.year) - 1.day
        user = WkUser.where("user_id = ?", userId).first
        unless user.join_date.blank?
            userDate = (user.join_date.to_date + 1.month).at_beginning_of_month
            if startDate < userDate
                startDate = userDate
            end
        end        
        gross = getCompVal(userId, taxComp["gross"].to_i, startDate , endDate)
        pf = getCompVal(userId, taxComp["pf"].to_i, startDate , endDate)
        basic = getCompVal(userId, taxComp["basic"].to_i, startDate , endDate)
        hra = getCompVal(userId, taxComp["hra"].to_i, startDate , endDate)
        child_educ = getCompVal(userId, taxComp["edu_allowance"].to_i, startDate , endDate)
        
        profTaxVal = WkSalary.where("user_id = ? and salary_component_id =? and salary_date between ? and ?",userId,taxComp["prof_tax"].to_i,
                        startDate,endDate)
        userSalaryHash = getUserSalaryHash(userId, startDate- 1.month)
        curVal = userSalaryHash[userId.to_i][taxComp["prof_tax"].to_i].blank? ? 0 : userSalaryHash[userId.to_i][taxComp["prof_tax"].to_i]
        if profTaxVal.blank? || ((4..9).to_a.include? startDate.month)
            prof_tax = curVal * 2
        else
            profTaxVal.each do |value|
                profTaxAmt = profTaxAmt + value.amount
            end
            prof_tax = profTaxAmt + curVal
        end
        taxEntries = WkIncomeTax.where("user_id = ?", userId).first
        if taxEntries.present?
            taxValue =  JSON.parse(taxEntries.value)
            sectionAmt = taxValue['insurance'].to_i + taxValue['tuition_fee'].to_i + pf
            sectionAmt = sectionAmt > 150000 ? 150000 : sectionAmt
            deductionAmt = taxComp["std_deduction"].to_i + taxValue['home_loan'].to_i + taxValue['travel_allowance'].to_i + taxValue['medical_insurance'].to_i +
                             taxValue['edu_loan'].to_i + prof_tax + (child_educ > 1200 ? 1200 : child_educ)
            hraVal = [((taxValue['rent'].to_i) - 0.1 * basic), basic / 2, hra].min
            taxable_income = gross + taxValue['addl_income'].to_i - deductionAmt - sectionAmt - hraVal
            taxIncome = taxable_income
            if taxIncome <= 500000
			    taxVal = 0
            else
                taxIncome = taxIncome - 500000
                if taxIncome > 500000
                    taxIncome = taxIncome - 500000
                    taxVal = 112500 + (0.3 * taxIncome)
                else
                    taxVal = 12500 + (0.2 * taxIncome)
                end
                taxVal = taxVal + (0.04 * taxVal)
            end
            monthTax = taxVal / 12
        end
    %>
	<%=h hidden_field_tag('gross', gross) %>
	<%=h hidden_field_tag('pf', pf) %>
	<%=h hidden_field_tag('basic', basic) %>
	<%=h hidden_field_tag('hra', hra) %>
	<%=h hidden_field_tag('child_educ', child_educ) %>
	<%=h hidden_field_tag('prof_tax', prof_tax) %>
    <div>
        <div class="splitcontentleft">
            <div class="box tabular">
                <table>
                    <tr>
                        <td><%= "Annual Gross" %></td><td><%= gross %></td>
                    </tr>
                    <tr>
                        <td><%= "PF" %></td><td><%= pf %></td>
                    </tr>
                    <tr>
                        <td><%= "Professional Tax" %></td><td><%= prof_tax %></td>
                    </tr>
                    <tr>
                        <td><%= "Children’s Education Allowance" %></td><td><%= child_educ %></td>
                    </tr>
                    <tr>
                        <td><%= "Standard Deduction" %></td><td><%= taxComp["std_deduction"] %></td>
                    </tr>
                    <tr>
                        <td><%= "Additional Income" %></td>
                        <td><%= text_field_tag("taxsettings[addl_income]", taxValue['addl_income'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td><%= "Interest on Home Loan" %></td>
                        <td><%= text_field_tag("taxsettings[home_loan]", taxValue['home_loan'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td><%= "Leave Travel Allowance" %></td>
                        <td><%= text_field_tag("taxsettings[travel_allowance]", taxValue['travel_allowance'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td><%= "Life Insurance" %></td>
                        <td><%= text_field_tag("taxsettings[insurance]", taxValue['insurance'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td><%= "Tuition fees for children" %></td>
                        <td><%= text_field_tag("taxsettings[tuition_fee]", taxValue['tuition_fee'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td><%= "Medical Insurance Premium" %></td>
                        <td><%= text_field_tag("taxsettings[medical_insurance]", taxValue['medical_insurance'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td><%= "Interest on Education Loan" %></td>
                        <td><%= text_field_tag("taxsettings[edu_loan]", taxValue['edu_loan'], size: 20, disabled: disabled) %></td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="splitcontentright">
            <div class="box tabular">
                <table>
                    <tr><td><b><%= "HRA" %></b></td></tr>
                    <tr>
                        <td></td>
                        <td><%= "Basic Salary" %></td>
                        <td><%= basic %></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><%= "HRA received" %></td>
                        <td><%= hra %></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><%= "Actual Rent" %></td>
                        <td><%= text_field_tag("taxsettings[rent]", taxValue['rent'], size: 20, disabled: disabled) %></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td><%= "Final HRA" %></td>
                        <td><%= hraVal unless hraVal.blank? %></td>
                    </tr>
                </table>
            </div>
            <div class="box tabular">
                <table>
                    <tr><td><b><%= "Taxable Income" %></b></td><td><%= taxable_income %></td></tr>
                    <tr><td><b><%= "Tax" %></b></td><td><%= "%.2f" % taxVal unless taxVal.blank? %></td></tr>
                    <tr><td><b><%= "Tax Per Month" %></b></td><td><%= "%.2f" % monthTax unless monthTax.blank? %></td></tr>
                </table>
            </div>
        </div>
    <div style="clear:both;"></div>
<% else %>
    <%      
        data = []
        sectionAmt = params['taxsettings']['insurance'].to_i + params['taxsettings']['tuition_fee'].to_i + params[:pf].to_i
        sectionAmt = sectionAmt > 150000 ? 150000 : sectionAmt
        deductionAmt = params[:std_deduction].to_i + params['taxsettings']['home_loan'].to_i + params['taxsettings']['travel_allowance'].to_i +
                         params['taxsettings']['medical_insurance'].to_i + params['taxsettings']['edu_loan'].to_i + params[:prof_tax].to_i +
                          (params[:child_educ].to_i > 1200 ? 1200 : params[:child_educ].to_i)
        basic = params[:basic].to_i
        hraVal = [(params['taxsettings']['rent'].to_i - 0.1 * basic), basic / 2, params[:hra].to_i].min
        taxIncome = params[:gross].to_i + params['taxsettings']['addl_income'].to_i - deductionAmt - sectionAmt - hraVal
        if taxIncome <= 500000
            taxVal = 0
        else
            taxIncome = taxIncome - 500000
            if taxIncome > 500000
                taxIncome = taxIncome - 500000
                taxVal = 112500 + (0.3 * taxIncome)
            else
                taxVal = 12500 + (0.2 * taxIncome)
            end
            taxVal = taxVal + (0.04 * taxVal)
        end
        monthTax = taxVal / 12
        monthTax = monthTax.blank? ? 0 : "%.2f" % monthTax
        data << {monthTax: monthTax}
        controller.redirect_to action: "income_tax", data: data, action_type: "ajaxCall"
    %>
    <%  %>
<% end %>