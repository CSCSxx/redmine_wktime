<% 
	polymorphic_filter = filter_session
	
	allSelection = false
	contactSelection = false
	accountSelection = false
	if polymorphic_filter == '1' || polymorphic_filter.blank?
		allSelection = true	
	end
%>
<% parent_id = 0 %>
<% parent_type = 'WkAccount' %>
<script type="text/javascript"> 
$(document).ready(function()
{
	<% if polymorphic_filter == '1' || polymorphic_filter.blank? %>
		<% allSelection = true %>
		$("#account_id").attr("disabled", true);
		$("#contact_id").attr("disabled", true);
	<% elsif polymorphic_filter == '2' %>
		<% contactSelection = true %>
		<% parent_id = contact_id %>
		<% parent_type = 'WkCrmContact' %>
		$("#account_id").attr("disabled", true);
		$("#contact_id").removeAttr("disabled");
	<% else  %>
		<% accountSelection = true %>
		<% parent_id = account_id %>
		<% parent_type = 'WkAccount' %>
		$("#contact_id").attr("disabled", true);
		$("#account_id").removeAttr("disabled");
	<% end %>  
  
});
 </script>
<% contactArr = relatedValues('WkCrmContact', nil, controller.getOrderContactType) #WkCrmContact.where(:contact_type => controller.getOrderContactType).order(:first_name, :last_name).pluck(:last_name, :id)  %>
<% contactArr.unshift(["",'']) if blankForContactDD %>
<% accountArr = options_for_wktime_account(blankForActDD, controller.getOrderAccountType) %>
<%	projects = Project.where("#{Project.table_name}.status not in(#{Project::STATUS_CLOSED},#{Project::STATUS_ARCHIVED})").order('name') %>	
<%	projArr = options_for_wktime_project(projects,true) 
	isPjtBlank = true
	if pjtChanged  

		accountProjects = getProjArrays(parent_id, parent_type)	
		projArr = accountProjects.collect{|m| [ m.project_name, m.project_id ] } if !accountProjects.blank?
		if !project_id.blank? && polymorphic_filter != '1'
			accProject = WkAccountProject.where(:parent_id => parent_id, :parent_type => parent_type )
			if !accProject[0].blank? && isAccountBilling(accProject[0]) 
				projArr.unshift(["", '0'])
				isPjtBlank = false
			end
		end
		
	end
	if blankOptionForPjt && isPjtBlank
		projArr.unshift(["", '0'])
	end
%> 
<table>
<tr>
	<% if isAll %>
	<th align="left"><%= radio_button_tag 'polymorphic_filter', '1', allSelection, :onclick => ' $("#contact_id").attr("disabled", true);$("#account_id").attr("disabled", true);' %>
	<%= l(:label_all).capitalize %></th>
	<td><td>
	<% end %>

	<th align="left"><%= radio_button_tag 'polymorphic_filter', '2', contactSelection, :onclick => ' $("#account_id").attr("disabled", true);$("#contact_id").removeAttr("disabled");' %>
	<%= l(:label_contact) %></th>
	<td><%=h select_tag('contact_id', options_for_select(contactArr, :selected => contact_id.blank? ? contactArr : contact_id  ),
	:onchange => " if(#{pjtChanged}) { accProjChanged(#{User.current.id}, this.id, false, #{blankOptionForPjt}); }   ") %>
	</td>

	<th align="left"><%= radio_button_tag 'polymorphic_filter', '3', accountSelection, :onclick => '$("#account_id").removeAttr("disabled");$("#contact_id").attr("disabled", true);' %><%= l(:label_account) %></th>
	<td><%=h select_tag('account_id', options_for_select(accountArr, :selected => account_id.blank? ? accountArr : account_id ),
	:onchange => " if(#{pjtChanged}) { accProjChanged(#{User.current.id}, this.id, false, #{blankOptionForPjt}); }") %></td>

	<% if isproject %>
		<th align="left"><label><%= l(:label_project) %></label></th>
		<td><%=h select_tag('project_id', options_for_select(projArr, :selected => project_id.nil? ? projArr : project_id)) %></td>
	<% end  %>
	
	<% if controller.requireRfqDD %>
		<th align="left"><label><%= l(:label_rfq) %></label></th>
		<td><%=h select_tag('rfq_id', options_for_rfq_select(rfq_id, false), :onchange=>" if(#{controller.requireQuoteDD} || #{controller.requirePoDD} ) { if(#{needQuoteDD} || #{needPoDD}) { rfqTOQuoteChanged(#{User.current.id}, '#{controller.getInvoiceType}');}}  ") %></td>
	<% end  %>
	
	<script type="text/javascript">	
		rfqQuoteUrl="<%= "#{url_for(:controller => 'wkorderentity', :action => 'getRfqQuoteIds')}" %>";
	</script>
	
	<% if controller.requireQuoteDD %>	
		<% if needQuoteDD %>
			<% rfq_arr = getRfqArray(false) #WkRfq.where(:status => 'o').order(id: :desc).pluck(:name, :id) %>
			<th align="left"><label><%= l(:label_winning_quote) %></label></th>
			<% rfqId = rfq_arr.blank? ? 0 : rfq_arr[0][1]  %>
			<td><%=h select_tag('quote_id', options_for_rfqQuote_select(false, rfqId )) %></td>
		<% end  %>
	<% end  %>
	
	<% if controller.requirePoDD %>	
		<% if needPoDD %>
			<% rfq_arr = getRfqArray(false) #WkRfq.where(:status => 'o').order(id: :desc).pluck(:name, :id) %>
			<% rfqId = rfq_arr.blank? ? 0 : rfq_arr[0][1]  %>
			<th align="left"><label><%= l(:label_purchase_order) %></label></th>
			<td><%=h select_tag('po_id', options_for_rfqPO_select(false, rfqId )) %></td>
		<% end  %>
	<% end  %>
	
<% if isapply %>
	
		<td><%= submit_tag l(:button_apply), :class => "small", :name => nil %>
		<%= link_to l(:button_clear), {:controller => controller_name, :action => 'index', :tab => controller_name}, :class => 'icon icon-reload' %></td><td></td>
	
<% end  %>

<tr>
</table>
