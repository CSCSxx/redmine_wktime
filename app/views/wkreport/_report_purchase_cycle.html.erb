<%
	@to = session[:wkreport][:to]
	@from = session[:wkreport][:from]
	sqlStr =  "select rfq.id as rfq_id, rfq.name as rfq_name, rfq.start_date as rfq_start, rq.quote_id, q.invoice_date as quote_date, rq.won_date, poq.purchase_order_id, po.invoice_date po_date, sipo.supplier_inv_id,
		 si.invoice_date as si_date, pay.paid_date from wk_rfqs rfq
		 left join wk_rfq_quotes rq on (rq.rfq_id = rfq.id and rq.is_won = true)
		 left join wk_invoices q on  (q.id = rq.quote_id)
		 left join wk_po_quotes poq on (rq.quote_id = poq.quote_id)
		 left join wk_invoices po on (po.id = poq.purchase_order_id)
		 left join wk_po_supplier_invoices sipo on (sipo.purchase_order_id = poq.purchase_order_id) 
		 left join wk_invoices si on (si.id = sipo.supplier_inv_id) left join (select sum(pmit.amount) total_pay_amount, max(p.payment_date) paid_date, sum(ii.amount) inv_amount, pmit.invoice_id from wk_payment_items pmit
left join wk_payments p on(pmit.payment_id = p.id)
left join wk_invoices i on (i.id= pmit.invoice_id)
left join wk_invoice_items ii on (ii.invoice_id = pmit.invoice_id)
where pmit.is_deleted='N' group by pmit.invoice_id having sum(pmit.amount) >= sum(ii.amount) ) pay  on (pay.invoice_id = si.id )where rfq.start_date between '#{@from}' and '#{@to}' "
	cycleEntries = WkRfq.find_by_sql(sqlStr)
%>
<%= stylesheet_link_tag 'application' , :media => "all" %>
<%= stylesheet_link_tag 'wk-time', :plugin => "redmine_wktime" %>
<div style="float:right">
	<table>
		<tr>
			<td>
				<% logo = Setting.plugin_redmine_wktime['wktime_header_logo'] %>					
				<% if !logo.blank? && (File.exist? (Redmine::Plugin.public_directory + "/redmine_wktime/images/" + logo)) %>						
					<%= image_tag("#{logo}", :plugin => "redmine_wktime") %>
				<% end %>
			</td>
		</tr>
	</table>
</div>
<div style="clear:both;"></div>
<div id="attn-rpt-dlg", style="overflow-x:auto;">
	<table style="width:100%; border-collapse: collapse;"border="1";>
		 <caption style="text-align:center"><b><%= Setting.plugin_redmine_wktime['wktime_company_name'] %><br><%= l(:report_purchase_cycle) + " " + l(:label_report) %></b></br>
		 <%= @from.strftime("%d-%b-%Y") + " " + l(:label_date_to) + " " + @to.strftime("%d-%b-%Y")%>
		
		<thead bgcolor="#e6e6e6">
			<tr>
				<th align="center", rowspan=2><%= l(:label_rfq) %></th>
				<th align="center" colspan=4><%= l(:report_purchase_cycle) %><br><%= "(In Days)" %></th>
			</tr>
			<tr>
				<th align="center"><%= "Winning Quote" %></th>
				<th align="center"><%= l(:label_purchase_order) %></th>
				<th align="center"><%= l(:label_supplier_invoice) %></th>
				<th align="center"><%= l(:label_supplier_payment) %></th>
			</tr>
		</thead>
		<tbody>
			<% cycleEntries.each do |entry| %>
				<tr class="<%= cycle("odd", "even") %>">
					<td align="left"><%= entry.rfq_name %></td>
					<td align="right"><%= (entry.won_date - entry.quote_date).to_f unless entry.won_date.blank? || entry.quote_date.blank? %></td>
					<td align="right"><%= (entry.po_date - entry.won_date).to_f unless entry.won_date.blank? || entry.po_date.blank? %></td>
					<td align="right"><%= (entry.si_date - entry.po_date).to_f unless entry.po_date.blank? || entry.si_date.blank? %></td>
					<td align="right"><%= (entry.paid_date - entry.si_date).to_f unless entry.paid_date.blank? || entry.si_date.blank? %></td>
				</tr>
			<% end %>
		</tbody>
	</table>
</div>